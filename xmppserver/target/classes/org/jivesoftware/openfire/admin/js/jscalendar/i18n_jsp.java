/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2022-03-01 17:58:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.jivesoftware.openfire.admin.js.jscalendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import org.jivesoftware.util.JiveGlobals;
import org.jivesoftware.util.LocaleUtils;

public final class i18n_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("org.jivesoftware.util.LocaleUtils");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("org.jivesoftware.util.JiveGlobals");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n");

    response.setContentType("text/javascript; charset=" + "UTF-8");
    DateFormat fullDay = new SimpleDateFormat("EEEE", JiveGlobals.getLocale());
    DateFormat shortDay = new SimpleDateFormat("EEE", JiveGlobals.getLocale());
    DateFormat fullMonth = new SimpleDateFormat("MMMM", JiveGlobals.getLocale());
    DateFormat shortMonth = new SimpleDateFormat("MMM", JiveGlobals.getLocale());
    Calendar c = Calendar.getInstance();

      out.write("\r\n// full day names (yes we really do want Sunday twice)\r\nCalendar._DN = new Array (\r\n    ");
 for (int i=1; i<9;i++) {
        c.set(Calendar.DAY_OF_WEEK, i);
    
      out.print( "\"" + fullDay.format(c.getTime()) + "\"" + (i < 8 ? "," : "") );
 } 
      out.write("\r\n);\r\n\r\n// short day names (yes we really do want Sunday twice)\r\nCalendar._SDN = new Array(\r\n    ");
 for (int i=1; i<9;i++) {
        c.set(Calendar.DAY_OF_WEEK, i);
    
      out.print( "\"" + shortDay.format(c.getTime()) + "\"" + (i < 8 ? "," : "") );
 } 
      out.write("\r\n);\r\n\r\nCalendar._FD = 0;\r\n\r\n// full month names\r\nCalendar._MN = new Array(\r\n    ");
 for (int i=0; i<12;i++) {
        c.set(Calendar.MONTH, i);
    
      out.print( "\"" + fullMonth.format(c.getTime()) + "\"" + (i < 11 ? "," : "") );
 } 
      out.write("\r\n);\r\n\r\n// short month names\r\nCalendar._SMN = new Array(\r\n    ");
 for (int i=0; i<12;i++) {
        c.set(Calendar.MONTH, i);
    
      out.print( "\"" + shortMonth.format(c.getTime()) + "\"" + (i < 11 ? "," : "") );
 } 
      out.write("\r\n);\r\n\r\n// tooltips\r\nCalendar._TT = {};\r\nCalendar._TT[\"INFO\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.info"));
      out.write("\";\r\nCalendar._TT[\"ABOUT\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.about"));
      out.write("\";\r\nCalendar._TT[\"PREV_YEAR\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.prev_year"));
      out.write("\";\r\nCalendar._TT[\"PREV_MONTH\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.prev_month"));
      out.write("\";\r\nCalendar._TT[\"GO_TODAY\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.go_today"));
      out.write("\";\r\nCalendar._TT[\"NEXT_MONTH\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.next_month"));
      out.write("\";\r\nCalendar._TT[\"NEXT_YEAR\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.next_year"));
      out.write("\";\r\nCalendar._TT[\"SEL_DATE\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.select_date"));
      out.write("\";\r\nCalendar._TT[\"DRAG_TO_MOVE\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.drag_to_move"));
      out.write("\";\r\nCalendar._TT[\"PART_TODAY\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.part_today"));
      out.write("\";\r\nCalendar._TT[\"DAY_FIRST\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.day_first"));
      out.write("\";\r\nCalendar._TT[\"WEEKEND\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.weekend"));
      out.write("\";\r\nCalendar._TT[\"CLOSE\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.close"));
      out.write("\";\r\nCalendar._TT[\"TODAY\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.today"));
      out.write("\";\r\nCalendar._TT[\"TIME_PART\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.time_part"));
      out.write("\";\r\nCalendar._TT[\"DEF_DATE_FORMAT\"] = \"%Y-%m-%d\";\r\nCalendar._TT[\"TT_DATE_FORMAT\"] = \"%a, %b %e\";\r\nCalendar._TT[\"WK\"] = \"wk\";\r\nCalendar._TT[\"TIME\"] = \"");
      out.print( LocaleUtils.getLocalizedString("calendar.time"));
      out.write("\";\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
